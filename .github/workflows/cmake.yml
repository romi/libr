name: CMake

on: [push]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install socat
        run: sudo apt install socat

      - name: Create Build Environment & configure CMake
        working-directory: ${{runner.workspace}}/libr
        shell: bash
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: |
          mkdir build_tests
          cd build_tests
          cmake ..

      - name: Build
        working-directory: ${{runner.workspace}}/libr
        run: |
          cd build_tests
          make -j4

      - name: Test
        working-directory: ${{runner.workspace}}/libr
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: |
          cd build_tests
          ctest -V
      
      - name: debug_path_build
        working-directory: ${{runner.workspace}}/libr
        run: |
          cd build_tests
          echo "pwd build tests"
          pwd
          echo "ls build tests"
          ls -lart
  
#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v1
#         with:
#           name: codecov-umbrella
#           yml: ./codecov.yml
#           fail_ci_if_error: true
#           directory: ${{runner.workspace}}/libr/build_tests/
#           verbose: false
      
      - name: Upload coverage to Codecov
        working-directory: ${{runner.workspace}}/libr
        run: bash <(curl -s https://codecov.io/bash)
      
      
